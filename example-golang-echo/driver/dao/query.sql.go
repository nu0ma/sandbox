// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.25.0
// source: query.sql

package dao

import (
	"context"
)

const getTodo = `-- name: GetTodo :one
SELECT id, user_id, title, completed FROM todos limit 1
`

func (q *Queries) GetTodo(ctx context.Context) (Todo, error) {
	row := q.db.QueryRow(ctx, getTodo)
	var i Todo
	err := row.Scan(
		&i.ID,
		&i.UserID,
		&i.Title,
		&i.Completed,
	)
	return i, err
}

const getUsers = `-- name: GetUsers :many
SELECT id, name, email, password FROM users
ORDER BY name
`

func (q *Queries) GetUsers(ctx context.Context) ([]User, error) {
	rows, err := q.db.Query(ctx, getUsers)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	items := []User{}
	for rows.Next() {
		var i User
		if err := rows.Scan(
			&i.ID,
			&i.Name,
			&i.Email,
			&i.Password,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
